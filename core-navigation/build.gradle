plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion build_versions.compileSdkVersion
    buildToolsVersion build_versions.buildToolsVersion

    defaultConfig {
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion
        multiDexEnabled true

        targetSdkVersion build_versions.targetSdkVersion

        testInstrumentationRunner "com.example.feature_pokemonlist.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation deps.kotlin.stdlib
    implementation deps.androidx.core.ktx
    implementation deps.androidx.appcompat.appcompat
    implementation deps.material.material
    testImplementation deps.junit.junit
    androidTestImplementation deps.androidx.test.junit
    androidTestImplementation deps.androidx.espresso.core

    implementation deps.hilt.android
    kapt deps.hilt.androidCompiler
    kaptAndroidTest deps.hilt.androidCompiler
    androidTestImplementation deps.hilt.androidTesting

    implementation project(":core")
    /**
     * Feature dependencies need to be api because of Hilt, from link:
     * https://developer.android.com/training/dependency-injection/hilt-android#hilt-modules
     *
     * Note: Because Hilt's code generation needs access to all of the Gradle
     * modules that use Hilt, the Gradle module that compiles your Application
     * class also needs to have all of your Hilt modules and constructor-injected
     * classes in its transitive dependencies.
     */
    api project(":feature-pokemonlist")
    api project(":feature-pokemondetail")
}