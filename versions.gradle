def build_versions = [:] // create a local hashmap
build_versions.compileSdkVersion = 30
build_versions.buildToolsVersion = "30.0.2"
build_versions.minSdkVersion = 21
build_versions.targetSdkVersion = 30
ext.build_versions = build_versions // define a global gradle variable build_versions and set it to the local

def versions = [:]
versions.kotlin = '1.4.10'
versions.hilt = '2.28-alpha'
versions.gradle = '4.0.1'
versions.google = '4.3.4'
versions.ktx = '1.3.2'
versions.appcompat = '1.2.0'
versions.material = '1.2.1'
versions.junit = '4.13.1'
versions.androidxjunit = '1.1.2'
versions.androidxconstraintlayout = '2.0.4'
versions.androidxlifecycle = '2.2.0'
versions.androidxHilt = '1.0.0-alpha02'
versions.androidxFragment = '1.2.5'
versions.androidxRecyclerview = '1.2.0-alpha06'
versions.androidxCardview = '1.0.0'
versions.androidxPalette = '1.0.0'
versions.androidxcompose = '1.0.0-alpha08'
versions.retrofit = '2.9.0'
versions.rxjava = '3.0.0'
versions.logging = '4.9.0'
versions.chucker = '3.2.0'
versions.glide = '4.11.0'
versions.mockito = '3.4.4'
versions.androidxTesting = '2.1.0'
versions.androidxFragment = '1.2.5'
versions.firebase = '18.0.0'
versions.robolectric = '4.4'
versions.espresso = '3.3.0'
versions.okhttp = '4.9.0'
ext.versions = versions

def deps = [:]

def gradle = [:]
gradle.build = "com.android.tools.build:gradle:$versions.gradle"
deps.gradle = gradle

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
kotlin.gradlePlugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

def hilt = [:]
hilt.gradlePlugin = "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
hilt.android = "com.google.dagger:hilt-android:$versions.hilt"
hilt.androidCompiler = "com.google.dagger:hilt-android-compiler:$versions.hilt"
hilt.androidTesting = "com.google.dagger:hilt-android-testing:$versions.hilt"
deps.hilt = hilt

def google = [:]
google.gms = "com.google.gms:google-services:$versions.google"
deps.google = google

def androidx = [:]

def core = [:]
core.ktx = "androidx.core:core-ktx:$versions.ktx"
androidx.core = core

def appcompat = [:]
appcompat.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
androidx.appcompat = appcompat

def test = [:]
test.junit = "androidx.test.ext:junit:$versions.androidxjunit"
androidx.test = test

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
androidx.espressoContrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
androidx.espresso = espresso

def compose = [:]
compose.ui = "androidx.compose.ui:ui:$versions.androidxcompose"
compose.foundation = "androidx.compose.foundation:foundation:$versions.androidxcompose"
compose.material = "androidx.compose.material:material:$versions.androidxcompose"
compose.materialcore = "androidx.compose.material:material-icons-core:$versions.androidxcompose"
compose.materialicons = "androidx.compose.material:material-icons-extended:$versions.androidxcompose"
compose.runtimelivedata = "androidx.compose.runtime:runtime-livedata:$versions.androidxcompose"
compose.runtimexjava = "androidx.compose.runtime:runtime-rxjava2:$versions.androidxcompose"
compose.compiler = "androidx.compose.compiler:compiler:$versions.androidxcompose"
androidx.compose = compose

androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.androidxconstraintlayout"
androidx.fragment = "androidx.fragment:fragment-ktx:$versions.androidxFragment"
androidx.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidxRecyclerview"
androidx.cardview = "androidx.cardview:cardview:$versions.androidxCardview"
androidx.palette = "androidx.palette:palette-ktx:$versions.androidxPalette"
androidx.testing = "androidx.arch.core:core-testing:$versions.androidxTesting"
androidx.fragmentTesting = "androidx.fragment:fragment-testing:$versions.androidxFragment"
androidx.uitooling = "androidx.ui:ui-tooling:1.0.0-alpha07"
androidx.uitest = "androidx.ui:ui-test:1.0.0-alpha07"

def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.androidxlifecycle"
lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidxlifecycle"
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.androidxlifecycle"
lifecycle.common = "androidx.lifecycle:lifecycle-common-java8:$versions.androidxlifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.androidxlifecycle"
androidx.lifecycle = lifecycle

def androidxHilt = [:]
androidxHilt.lifecycle = "androidx.hilt:hilt-lifecycle-viewmodel:$versions.androidxHilt"
androidxHilt.compiler = "androidx.hilt:hilt-compiler:$versions.androidxHilt"
androidx.hilt = androidxHilt

deps.androidx = androidx

def material = [:]
material.material = "com.google.android.material:material:$versions.material"
deps.material = material

def junit = [:]
junit.junit = "junit:junit:$versions.junit"
deps.junit = junit

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter = "com.squareup.retrofit2:adapter-rxjava3:$versions.retrofit"
deps.retrofit = retrofit

def rxjava = [:]
rxjava.rxandroid = "io.reactivex.rxjava3:rxandroid:$versions.rxjava"
rxjava.rxjava = "io.reactivex.rxjava3:rxjava:$versions.rxjava"
rxjava.rxkotlin = "io.reactivex.rxjava3:rxkotlin:$versions.rxjava"
deps.rxjava = rxjava

deps.okhttp = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"

def chucker = [:]
chucker.library = "com.github.chuckerteam.chucker:library:$versions.chucker"
chucker.libraryNoOp = "com.github.chuckerteam.chucker:library-no-op:$versions.chucker"
deps.chucker = chucker

def glide = [:]
glide.glide = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.mockito = "org.mockito:mockito-core:$versions.mockito"
deps.firebase = "com.google.firebase:firebase-analytics:$versions.firebase"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"

ext.deps = deps